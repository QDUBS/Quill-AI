name: Deploy Quill AI to AWS

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Clean pip cache and install dependencies
        run: |
          pip cache purge
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Install PostgreSQL development libraries
        run: sudo apt-get update && sudo apt-get install -y libpq-dev build-essential 

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.24.0"
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: quill-ai
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Create EKS Cluster
        run: |
          aws eks create-cluster --name quill-ai 
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name quill-ai

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml

      - name: Get Back the External IP of the LoadBalancer
        run: |
          echo "Waiting for the LoadBalancer to be provisioned"
          kubectl wait --for=condition=available --timeout=600s deployment/quill-ai-service
          EXTERNAL_IP=$(kubectl get svc quill-ai-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "External IP: $EXTERNAL_IP"

      - name: Notify Deployment Success
        run: echo "Deployment Successful!"
